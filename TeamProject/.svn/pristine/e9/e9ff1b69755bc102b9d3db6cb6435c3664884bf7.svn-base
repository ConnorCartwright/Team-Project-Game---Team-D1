package network;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;

import network.GameDataPackets.InputPacket;
import network.GameDataPackets.WorldStatePacket;

public class ServerPlayer {
    public final int id;
    public int team;
    public String name;
    public boolean active = false;
    public int type = 0;
    public int kills = 0;
    public int deaths = 0;
    public Socket socket;
    
    public ServerPlayer (int id, int team, String name, Socket socket) {
        this.id = id;
        this.team = team;
        this.name = name;
        this.socket = socket;
    }
    
    public InputPacket getInput () {
        while (true) {
            try {
                ObjectInputStream ois = new ObjectInputStream(socket.getInputStream());
                Object message = ois.readObject();
                if (message instanceof InputPacket) {
                    InputPacket input = ((InputPacket)message);
                    return input;
                }
            } catch (ClassNotFoundException | IOException e) {
                System.out.println("Error while receiving request from player "+id);
                e.printStackTrace();
            }
        }
    }
    
    public void sendWorldState(WorldStatePacket wsp) {
        try {
            ObjectOutputStream out = new ObjectOutputStream(socket.getOutputStream());
            out.writeObject(wsp);
        } catch (IOException e) {
            System.out.println("Exception when trying to send data to player " + socket.getRemoteSocketAddress());
            e.printStackTrace();
        }
    }
}