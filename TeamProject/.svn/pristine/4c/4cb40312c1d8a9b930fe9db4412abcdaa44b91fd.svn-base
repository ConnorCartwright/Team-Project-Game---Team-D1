package weapon;

/**
 * The <code>Secondary Weapon</code> class extends the generic Weapon class. It defines the data that each Secondary
 * Weapon below (e.g. Pistol, Revolver) must have in order to be a Secondary Weapon. The Secondary Weapon will take up 
 * the clientPlayers second Weapon slot, which will be accessed by pressing the '2' key on the keyboard. This will be 
 * the clientPlayers secondary weapon and will be what they will use in tight situations.
 * 
 * @see Weapon
 * @author Team D1
 * @author Connor Cartwright
 *
 */
public abstract class SecondaryWeapon extends Weapon {

	/**
	 * This is the constructor for creating a new <code>Primary Weapon</code> which takes nine parameters, which
	 * when combined completely define the behaviour of the weapon - how it will fire, how much damage it will do,
	 * etc. Primary Weapons will be the clientPlayers main defence against enemies.
	 * 
	 * @param accuracy the accuracy of the weapon; the lower the accuracy the more random the projectiles will be.
	 * @param damage the damage of the weapon - this is the amount it will do to the enemies health on hit.
	 * @param cooldown the time it takes in ms between shots; a cooldown of 100 is 10 projectiles per second.
	 * @param range how far the projectiles fly before dropping.
	 * @param numProjectiles how many projectiles are fired on each shot.
	 * @param projectileSpeed how fast the projectiles fly.
	 * @param reloadTime the time it tkaes in ms for the gun to reload after the entire magazine is expended.
	 * @param magSize the number of projectiles per magazine.
	 * @param maxAmmo the maximum ammo the player should be able to hold at any one time for this weapon.
	 */
	public SecondaryWeapon(double accuracy, double damage, int cooldown, int range, int numProjectiles, 
			double projectileSpeed, int reloadTime, int magSize, int maxAmmo) {
		super(accuracy, damage, cooldown, range, numProjectiles, projectileSpeed, reloadTime, magSize, maxAmmo);
	}

}
