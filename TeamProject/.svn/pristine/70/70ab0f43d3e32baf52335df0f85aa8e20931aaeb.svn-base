package weapon;

import java.util.Random;




import network.GameEvent.GunShotEvent;
import core.Projectile;
import core.World;
import character.ControlledCharacter;

/**
 * The <code>Weapon</code> class defines the behaviour of ALL weapons, both Primary Secondary, etc.
 * Here the Accessor and Mutator methods are located for ease of access elsewhere in the code and to
 * avoid code duplication. The Weapon class encompasses how ALL weapons will behave.
 * 
 * A specific set of <code>Weapons</code> are used by each <code>ControlledCharacter<code>.
 * 
 * @see ControlledCharacter
 * @see PrimaryWeapon
 * @see SecondaryWeapon
 * @author Team D1
 * @author Connor Cartwright
 *
 */
public abstract class Weapon {
    private final int weaponId;
    
	private double accuracy;
	private double damage;
	private double range; // how far can the weapon fire projectiles before they drop
	
	private int cooldown; // the time between each shot in ms, e.g. a cooldown of 100 is 10 shots per second.
	private int reloadTime; // how long it takes for the gun to reload
	private int magSize; // the amount of projectiles in each magazine 
	private int maxAmmo; // the max amount of ammo for the Weapon, also the starting ammo
	
	private int numProjectiles; // how many projectiles the weapon fires on each shot
	private double projectileSpeed; // how fast the projectiles are, that the weapon fires
	
	private Random rand = new Random();
	
	public Weapon(int weaponId, double accuracy, double damage, int cooldown, int range, int numProjectiles, 
					double projectileSpeed, int reloadTime, int magSize, int maxAmmo) {
	    this.weaponId = weaponId;
		this.accuracy = accuracy;
		this.damage = damage;
		this.cooldown = cooldown;
		this.range = range;
		this.numProjectiles = numProjectiles;
		this.projectileSpeed = projectileSpeed;
		this.reloadTime = reloadTime;
		this.magSize = magSize;
		this.maxAmmo = maxAmmo;
	}
	
	public void fire(World w, ControlledCharacter c, double direction) {
	    // TODO add noise to each gun
	    w.getEventListener().onEventReceived(new GunShotEvent(c.getIntX(),c.getIntY(),(float)direction,weaponId));
		for (int i = 0; i < numProjectiles; i++) {
			double newdirection = direction + (1-accuracy/100) * (rand.nextGaussian() / 5);
			w.addProjectile(new Projectile(c, damage, newdirection, projectileSpeed, range));
		}
	}
	
	public double getAccuracy() {
		return accuracy;
	}
	
	public double getCooldown() {
		return cooldown;
	}

	public double getDamage() {
		return damage;
	}

	public double getRange() {
		return range;
	}

	public int getMagSize() {
		return magSize;
	}
	
	public int getMaxAmmo() {
		return maxAmmo;
	}
	
	public int getNumProjectiles() {
		return numProjectiles;
	}

	public double getProjectileSpeed() {
		return projectileSpeed;
	}

	public double getReloadTime() {
		return reloadTime;
	}
	
	public void setAccuracy(double accuracy) {
		this.accuracy = accuracy;
	}
	
	public void setDamage(double damage) {
		this.damage = damage;
	}

	public void setCooldown(int cooldown) {
		this.cooldown = cooldown;
	}

	public void setRange(double range) {
		this.range = range;
	}

	public void setNumProjectiles(int numProjectiles) {
		this.numProjectiles = numProjectiles;
	}

	public void setProjectileSpeed(double projectileSpeed) {
		this.projectileSpeed = projectileSpeed;
	}

	public void setReloadTime(int reloadTime) {
		this.reloadTime = reloadTime;
	}
	
}