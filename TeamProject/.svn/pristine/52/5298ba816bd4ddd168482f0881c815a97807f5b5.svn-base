//<<<<<<< .mine
////package player;
////
////import java.util.Random;
////
////import physics.Projectile;
////import physics.World;
////
////public class Weapon {
////	public static final Weapon SNIPER_RIFLE = new Weapon(96, 100, 3000, 1000, 1, 50); // SNIPER
////	public static final Weapon PISTOL = new Weapon(90, 50, 1000, 500, 1, 30); // pistol
////	// private Weapon weapon = new Weapon(65.0, 32.0, 1, 230, 29, 5); // flamethrower
////	public static final Weapon SHOTGUN = new Weapon(80, 32, 2000, 500, 5, 20); // shotgun
////
////	private float accuracy;
////	private float damage; // damage per projectile
////	private int reloadTime; // num bullets per second ?
////	private float range; // how far the projectiles fly
////	private int numProjectiles; // how many projectiles there are per shot
////	private float projectileSpeed; // how fast the projectiles fly
////
////	private Random rand = new Random();
////
////	private Weapon(float accuracy, float damage, int fireRate, float range,
////			int numProjectiles, float projectileSpeed) {
////		this.accuracy = (accuracy / 100) - 1;
////		this.damage = damage;
////		this.reloadTime = fireRate;
////		this.range = range;
////		this.numProjectiles = numProjectiles;
////		this.projectileSpeed = projectileSpeed;
////	}
////
////	public void fire(World w, Character c, double direction) {
////		for (int i = 0; i < numProjectiles; i++) {
////			direction += accuracy * (rand.nextGaussian() / 5);
////			w.addProjectile(new Projectile(c, damage, direction, projectileSpeed, range));
////		}
////	}
////
////	public float getAccuracy() {
////		return accuracy;
////	}
////
////	public float getDamage() {
////		return damage;
////	}
////
////	public float getReloadTime() {
////		return reloadTime;
////	}
////
////	public float getRange() {
////		return range;
////	}
////
////	public int getNumProjectiles() {
////		return numProjectiles;
////	}
////
////	public double getProjectileSpeed() {
////		return projectileSpeed;
////	}
////
////	public void setDamage(float damage) {
////		this.damage = damage;
////	}
////
////	public void setReloadTime(int reloadTime) {
////		this.reloadTime = reloadTime;
////	}
////
////	public void setRange(float range) {
////		this.range = range;
////	}
////
////	public void setNumProjectiles(int numProjectiles) {
////		this.numProjectiles = numProjectiles;
////	}
////
////	public void setProjectileSpeed(float projectileSpeed) {
////		this.projectileSpeed = projectileSpeed;
////	}
////}
//=======
//package player;
//
//import physics.Projectile;
//import physics.World;
//import screen.Utils;
//
//public class Weapon {
//	public static final Weapon SNIPER_RIFLE = new Weapon(96, 100, 3000, 1000, 1, 50); // SNIPER
//	public static final Weapon PISTOL = new Weapon(90, 50, 1000, 500, 1, 30); // pistol
//	// private Weapon weapon = new Weapon(65.0, 32.0, 1, 230, 29, 5); // flamethrower
//	public static final Weapon SHOTGUN = new Weapon(80, 32, 2000, 500, 5, 20); // shotgun
//
//	private float accuracy;
//	private float damage; // damage per projectile
//	private int reloadTime; // num bullets per second ?
//	private float range; // how far the projectiles fly
//	private int numProjectiles; // how many projectiles there are per shot
//	private float projectileSpeed; // how fast the projectiles fly
//
//	private Weapon(float accuracy, float damage, int fireRate, float range,
//			int numProjectiles, float projectileSpeed) {
//		this.accuracy = (accuracy / 100) - 1;
//		this.damage = damage;
//		this.reloadTime = fireRate;
//		this.range = range;
//		this.numProjectiles = numProjectiles;
//		this.projectileSpeed = projectileSpeed;
//	}
//
//	public void fire(World w, Character c, double direction) {
//		for (int i = 0; i < numProjectiles; i++) {
//			direction += accuracy * (Utils.random().nextGaussian() / 5);
//			w.addProjectile(new Projectile(c, damage, direction, projectileSpeed, range));
//		}
//	}
//
//	public float getAccuracy() {
//		return accuracy;
//	}
//
//	public float getDamage() {
//		return damage;
//	}
//
//	public float getReloadTime() {
//		return reloadTime;
//	}
//
//	public float getRange() {
//		return range;
//	}
//
//	public int getNumProjectiles() {
//		return numProjectiles;
//	}
//
//	public double getProjectileSpeed() {
//		return projectileSpeed;
//	}
//
//	public void setDamage(float damage) {
//		this.damage = damage;
//	}
//
//	public void setReloadTime(int reloadTime) {
//		this.reloadTime = reloadTime;
//	}
//
//	public void setRange(float range) {
//		this.range = range;
//	}
//
//	public void setNumProjectiles(int numProjectiles) {
//		this.numProjectiles = numProjectiles;
//	}
//
//	public void setProjectileSpeed(float projectileSpeed) {
//		this.projectileSpeed = projectileSpeed;
//	}
//
//	// setter/mutator methods could be used when you pick up powerups
//	// e.g. firerate *= 1.2
//	// damage *= 1.5
//	// range *= 1.5
//	// etc.
//	// we could easily implement negative powerups as well
//}
//>>>>>>> .r39
